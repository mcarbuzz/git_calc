name: CI/CD Pipeline

# Определяем события, которые будут запускать workflow
on:
  push:  # Запускать на каждый коммит
    branches:
      - '**'  # Все ветки
  pull_request:  # Также запускать на создание pull request в ветку main
    branches:
      - main  # Для PR в ветку main

jobs:
  build:
    runs-on: windows-latest  # Используем последнюю версию Windows для выполнения
    steps:
      # Шаг 1: Клонируем репозиторий
      - name: Checkout code
        uses: actions/checkout@v3  

      # Шаг 2: Настроим Python окружение
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Шаг 3: Установим зависимости
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Шаг 4: Запуск unit-тестов
      - name: Run unit tests
        run: |
          python -m unittest discover -p "unittest_calculator.py"

      # Шаг 5: Сборка Windows исполнимого файла с PyInstaller
      - name: Build Windows executable with PyInstaller
        run: |
          pip install pyinstaller
          pyinstaller --onefile main.py
          
      # Шаг 6: Копирование собранного исполняемого файла в папку 'install'
      - name: Copy executable to install folder
        run: |
          mkdir install
          copy dist\main.exe install\

      # Шаг 7: Пушим собранный файл в репозиторий
      - name: Push main.exe to the 'install' folder
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add install/main.exe
          git commit -m "Создан main.exe в папке install"
          git push origin HEAD:main
